{"version":3,"file":"static/js/641.3d12136c.chunk.js","mappings":"sLAEaA,E,QAAaC,GAAAA,QAAH,uE,SCSvB,EARgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,SAACF,EAAD,UAAaE,GACrB,C,yLCHYC,EAAUF,EAAAA,GAAAA,IAAH,gM,SCoEpB,EA5DkB,WACf,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAUMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MAC/B,OADmD,EAAbC,MAEnC,IAAK,QACF,OAAON,EAASK,GACnB,IAAK,WACF,OAAOH,EAAYG,GACtB,QACG,OAER,EAED,OACG,iBAAME,SAnBY,SAAAC,GAClBA,EAAEC,iBACFb,GAASc,EAAAA,EAAAA,IAAM,CAAEX,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACd,EAcgCS,aAAa,MAA3C,UACG,UAAChB,EAAD,YACG,SAACiB,EAAA,EAAD,CACGC,GAAI,CAAEC,EAAG,EAAGC,MAAO,QACnBC,GAAG,eACHC,MAAM,QACNC,QAAQ,SACRC,UAAQ,EACRb,KAAK,QACLD,MAAON,EACPqB,KAAK,QACLC,SAAUlB,KAEb,UAACmB,EAAA,EAAD,CAAaT,GAAI,CAAEC,EAAG,EAAGC,MAAO,QAAUG,QAAQ,SAAlD,WACG,SAACK,EAAA,EAAD,CAAYC,QAAQ,4BAApB,uBACA,SAACC,EAAA,EAAD,CACGN,UAAQ,EACRH,GAAG,4BACHI,KAAM,WACNf,MAAOJ,EACPK,KAAK,WACLe,SAAUlB,QAIhB,SAACuB,EAAA,EAAD,CACGN,KAAK,SACLF,QAAQ,YAFX,uBASX,E,8BCnEYvB,EAAUF,EAAAA,GAAAA,IAAH,6FAMPkC,EAAQlC,EAAAA,GAAAA,GAAH,8H,UCyBlB,EArBkB,WACf,IAAMmC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAG9B,OACIJ,IACE,iCACG,SAACK,EAAA,EAAD,WACG,SAACC,EAAA,EAAD,WACG,UAAC,EAAD,YACG,SAACP,EAAD,qBACA,SAAC,EAAD,WAIRI,IAAc,SAACI,EAAA,EAAD,MAI1B,C","sources":["components/Section/Section.styled.js","components/Section/Section.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding-top: 60px;\n  padding-bottom: 60px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionWrp>{children}</SectionWrp>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  align-items: center;\n  width: calc(100vw - 30px);\n  @media (min-width: 425px) {\n    width: 400px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport TextField from '@mui/material/TextField';\nimport FilledInput from '@mui/material/FilledInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport { Wrapper } from './LoginForm.styled';\n\nconst LoginForm = () => {\n   const dispatch = useDispatch();\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n\n\n   const handleSubmit = e => {\n      e.preventDefault();\n      dispatch(logIn({ email, password }));\n      setEmail('');\n      setPassword('');\n   };\n\n   const handleChange = ({ target: { value, name } }) => {\n      switch (name) {\n         case 'email':\n            return setEmail(value);\n         case 'password':\n            return setPassword(value);\n         default:\n            return;\n      }\n   };\n\n   return (\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n         <Wrapper>\n            <TextField\n               sx={{ m: 1, width: '100%' }}\n               id=\"filled-basic\"\n               label=\"Email\"\n               variant=\"filled\"\n               required\n               name=\"email\"\n               value={email}\n               type=\"email\"\n               onChange={handleChange}\n            />\n            <FormControl sx={{ m: 1, width: '100%' }} variant=\"filled\">\n               <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n               <FilledInput\n                  required\n                  id=\"filled-adornment-password\"\n                  type={'password'}\n                  value={password}\n                  name=\"password\"\n                  onChange={handleChange}\n                \n               />\n            </FormControl>\n            <Button\n               type=\"submit\"\n               variant=\"contained\"              \n            >\n               Login\n            </Button>\n         </Wrapper>\n      </form>\n   );\n};\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n  font-size: 20px;\n  @media (min-width: 768px) {\n    font-size: 26px;\n  }\n  margin-bottom: 20px;\n`;\n","import LoginForm from 'components/LoginForm';\nimport Section from 'components/Section';\nimport Container from 'components/Container';\nimport {\n   selectIsRefreshing,\n   selectUserIsLoading,\n} from 'redux/auth/authSelectors';\nimport { useSelector } from 'react-redux';\nimport { Wrapper, Title } from './LoginPage.styled';\nimport Loader from 'components/Loader';\n\n\nconst LoginPage = () => {\n   const isRefreshing = useSelector(selectIsRefreshing);\n   const isLoading = useSelector(selectUserIsLoading);\n\n\n   return (\n      !isRefreshing && (\n         <>\n            <Section>\n               <Container>\n                  <Wrapper>\n                     <Title>Login</Title>\n                     <LoginForm />\n                  </Wrapper>\n               </Container>\n            </Section>\n            {isLoading  && <Loader />}\n         </>\n      )\n   );\n};\nexport default LoginPage;\n"],"names":["SectionWrp","styled","children","Wrapper","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","value","name","onSubmit","e","preventDefault","logIn","autoComplete","TextField","sx","m","width","id","label","variant","required","type","onChange","FormControl","InputLabel","htmlFor","FilledInput","Button","Title","isRefreshing","useSelector","selectIsRefreshing","isLoading","selectUserIsLoading","Section","Container","Loader"],"sourceRoot":""}